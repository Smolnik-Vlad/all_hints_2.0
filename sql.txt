create database name - создание базы данных	
use name_of_database - для использования базы данных	

		работа с таблицами
	создание

create table name( - создание таблицы
	id int identity primary key not null     - создание поля id, которое заполняется автоматически заполняется индивидуальным числом, поле не может быть пустым
	status int foreign key references status(id) - создание поля status, которое является внешним ключом и ссылается на поле id таблицы status

)

	заполнение
insert into name_of_table(id, name, [...]) - ввести в таблицу (указывание полей)
values(1, 'Vlad', [...]) - значеня

	изменение 
update name_of_table - изменяем таблицу
set name='Vlad' - поле имя на Vlad
where id=1 - где id=1

	глобальное изменение (колонок)
alter table name_of_table		- изменение в таблице
add name_of_column int		- добавление колонки


	запросы (выборы)
select player_name, id from player - выбирает поля player_name, id
where id!=2 and player_name!='fgv'- условия для выбора
where name like '%nam%' - если строка содержит подстроку (может быть '%ame', '%am%', 'nam%')	
ordered by id - сортировать по id
ordered by id desc - сортировка в обратном порядке
group by born - сuрупировать по born, то есть будут только уникальные, не повторяющиеся. При этом должны выводиться исключительно поля born




		Работа с алхимией

https://pythonru.com/biblioteki/ustanovka-i-podklyuchenie-sqlalchemy-k-baze-dannyh
https://pythonru.com/biblioteki/shemy-v-sqlalchemy-orm
https://pythonru.com/biblioteki/shemy-sqlalchemy-core

from sqlalchemy import create_engine, select, Table, Column, Integer, String, MetaData, ForeignKey, null 
import pyodbc

meta = MetaData()    			- переменная для хранения всей инфы
engine = create_engine('mssql+pyodbc://Vlad:Smolnik_2904@localhost:1433/school?driver=ODBC+Driver+17+for+SQL+Server', echo=True) - подключение бд к питону
meta.create_all(engine) - запись в мету инфы о всей таблицы
conn=engine.connect() - создание коннекта
Base=declarative_base() - переменная декларативного базового класса


class User(Base):					- класс (или модель)
	__tablename__='name'				- имя таблицы
	id = Column(Integer, primary_key=True)
	title = Column(String(100), nullable=False)

	__table_args__ = (				- добавление ключей   различных ограничений
        PrimaryKeyConstraint('id', name='user_pk'),
        UniqueConstraint('username'),
        UniqueConstraint('email'),
    )




post=Table('name', meta
    Column('id', Integer(), primary_key=True),
    Column('title', String(200), nullable=False),
)
class Post(object):
	pass

mapping(Post, post) - переводит объект Table(таблицу) в класс с полями колонок таблицы?



