		Обнуление CSS стилей (просто вставить кусок кода в начало файла CSS) - для полного управления стилями
*{                  * - для всех тегов ()
    padding: 0;
    margin: 0;
    border: 0;
}
*,*:before,*:after{			-ставит подсчет ширины блоков так, чтобы было удобно верстать
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
:focus, :active{outline: none;}    - убираем линии обводки у некоторых тегов
a:focus, a:active{outline: none;}

nav, footer, header, aside{display: block;} - делает теги блочными

html, body{             - уравнивает поведение шрифтов и элементов для разных браузеров
    height: 100%;
    width: 100%;
    font-size: 100%;
    line-height: 100%;
    font-size: 14px;
    -ms-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

input,button,textarea{font-family: inherit;} - просим наследовать теги семейство шрифта

input::-ms-clear{display: name;}      - убирают некоторые моменты
button{cursor: pointer;}
a, a:visited{text-decoration: none ;}
a:hover{text-decoration: none;}
ul li{list-style: name;}
img{vertical-align: top;}	


		селекторы (тег span берется как пример)
span{} - все теги span будут обрабатываться
.red_col, redz_col2{} - обрабатываются все теги с классом red_col и red_col2 (red_col - класс тега)
span.red_col{} - обрабатываются все теги span с классом red_col 
.red_col span{} - обрабатываются все span внутри класса red_col 
.red_col>span{} - если есть в классе вложеный тег, то будет отрабатваться исключительно span, принадлежащие этому классу, но не принадлежащие вложенному тегу

.class: last-child - обращение к последнему элементу (нужно иметь ввиду, что данный элемент в блоке действительно под своим номером, даже если перед ним стоит не обрабатываемый тег)
     first-child - обращение к первому элементу
     nth-child(n) - обращение к n-му элементу списка класса (в скобках может быть n - номер элемента)
										  odd - все нечетные
										  even - все нечетные
										  


		CSS  стили шрифта и текста

ШРИФТЫ: 

font-family: "Имя шрифта", "Имя шрифта", тип шрифта - Устанавливает семейство шрифта
Типы шрифта:
serif — шрифты с засечками (антиквенные), типа Times;
sans-serif — рубленные шрифты (шрифты без засечек или гротески), типичный представитель — Arial;
cursive — курсивные шрифты;
fantasy — декоративные шрифты;
monospace — моноширинные шрифты, ширина каждого символа в таком семействе одинакова (шрифт Courier).

font-size - размер шрифта

font-style: - определяет начертание шрифта
normal - Обычное начертание текста.
italic - Курсивное начертание. 
oblique - Наклонное начертание.

font-weight: - Устанавливает насыщенность шрифта.
100 - thin
300 - lite
400 - normal
500 - medium
600 - semibold
700 - bold
900 - black

СВОЙСТВА ТЕКСТА:

color: - цвет текста

text-align: - выравнивание текста
	center - по центру
	justify - по ширине
	left - по левому краю
	right -  по правому краю

text-decoration: - оформляет текст
	line-through - перечеркнутый текст
	overline - линия над текстом
	underline - линия под текстом
	none - отменяет все эффекты, в том числе подчеркивания у ссылок

text-shadow: горизонтальное_смещение вертикальное_смещение размер цвет - добавляет тень к тексту
Пример: text-shadow: 1px 1px 1px #000

text-transform: -  заглавные и прописные символы
capitalize - все слова с заглавной
lowercase - все символы становятся строчными
uppercase - все символы становятся заглавными
none - не меняет регистр символа

text-indet: - величина отступа первой строки блока текста (красная строка)
letter-spacing: - интервал между символами
word-spacing: - интервал между словами
line-height: - межстрочный интервал
white-space: - свойства пробелов между строками
nowar - запрет переноса строки (весь текст в одну строку)
normal - возвращает все как было


		Свойства блоков и строчных элементов
display
display: - многоцелевое свойство, которое определяет, как элемент должен быть показан в документе
	block - заставляем элемент показываться как блочный(т. е. занимает всю ширину, нужную высоту и т. д.), можно также применять к строчному элементу, тогда он станет блочным
	inline - заставляем элементы пoказываться, как строчные
	inline-block - гибрид между block и inline (т.е. не растягивается на всю ширину как блочный текст, но может использовать отступы, ведет себя как и строчный  )
	none - временно удаляет объект, все следующиееобъекты занимают его место

В основном блочные:
padding: 10px 20px 30px 5px / 10px 20px 5px / 10px 5px / 10px (может так же записываться в процентах (от размеров родительского объекта(блока)))- внутренний отступ блочных тегов(сверху справа снизу слева / отступ сверху, отступ слева и справа, отступ снизу / сверху и снизу, слева и справа / ко всем сторонам)
margin: 10px 20px 30px 5px - внешний отступ (все такие же значения, что и с padding, но  можно давать и отрицательные значения)
width 500px/10% - задает конкретную ширину блока (становится жестко от правой стороны окна и на 500px, не меняется при изменении размера окна) (иногда применяется к строчным тегам. Пример: img)
max-width 500px - ограничивает блок (т.е. при изменении размера окна будет увеличиваться до 500px)
min-width 500px - ограничивает блок (т.е. при изменении размера окна будет меняться от 500px (если делать меньше окно, блок уйдет за пределы окна))
height 200 - задает конкретную высоту блока
max-height
min-height

overflow: 		- управляет отображением содержания блочного элемента (если текст вылазит за блок, то применяются варианты записи:
	  visible - вылазит за предел
	  hidden - прячется
	  scroll прокрутка(x и y) 
	  auto - прокрутка, когда она нужна



		Свойства и стили оформления блоков
border: 1px solid #000 - граница блока шириной 1px #000цвета (хорошо работает и для картинки)
	    solid - непрерывная линия
	    dotted - в точечку
	    dashed - черточками
border-left/right/bottom/top - выделеяет границу только слева/справа/снизу/сверху
border-left: none - не будет выделять левую границу
outline: 1px solid #000 - граница0 огибающая блок (огибает все стыки в строчном объекте)
border-radius: 10px 10px 10px 10px - закругляет края границы блока (относится не только к border, например можно использвать c overflow, box-shadow), может так же измеряться в процентах, тогда 50% образует идеальный сектор круга (можно использовать с overflow: hidden)
box-shadow: 5px 5px 10px 15px rgba(0, 0, 0, 0.2(прозрачность)) - тень блока(сдвиг по горизонтали, сдвиг по  вертикали, радиус тени, расстояние тени, цвет тени )
box-shadow: inset 5px 5px 10px 15px #000 - тень внутри блока
сopacity: 0.2 - прозрачность элемента (измеряется от 0 до 1) НЕ УБИРАЕТСЯ С ОКНА, А ПРОСТО МОЖЕТ СТАТЬ НЕВИДИМЫМ, МЫ МОЖЕМ ВЗАИМОДЕЙСТВОВАТЬ С БЛОКОМ (например, если сделать ссылку прозрачной, мы сможем на нее нажимать)
visibility: hiden/visible - отображение или скрывание блоков, место остается, но с блоком взаимодействовать не можем


	BACKGROUND
Все по background (фон) https://fls.guru/cssbackground.html
background: #18b5a4/rgba(24,181,164,0.5); - цвет фона(rgba(r, g, b, процент прозрачности))
background: url('img/background/avatar.jpg'); - ставится картинка на фон
https://www.colorzilla.com/gradient-editor/ - инструмент для создания градиента


background: url('img/background/avatar.jpg') repeat;
background-repeat: repeat; - повторение картинки 
		   repeat - по умолчанию
		   no-repeat - один раз
		   repeat-x - по горизонтали
		   repeat-y - по вертикали
		   space - картинка не сжимается, не урезается, но появляются зазоры между картинками
		   round - картинка не урезается, но может сжиматься для того, чтобы поместилась

background: url('img/background/avatar.jpg') 25px 30px no-repeat; 
background-position: 0 0; - выравнивание картинки(обязательно: background-image: url('img/background/bg.jpg'); background-repeat: no-repeat)
		     0 0 - по умолчанию
		     50% 50% - по середине
		     0 50% /left- слева
		     25% 30% - позиция (первый % - по горизонтали, второй % - по вертикали)

					     
background: url('img/background/bg.jpg') 0 0 no-repeat scroll;
background-attachment: scroll; - устанавливает прокрутку фонового изображения вместе со страницей(обязательно: ackground-image: url('img/background/bg.jpg'); background-repeat: no-repeat; background-position: 0 0;) 
		       scroll - пррокрутка с экраном
		       fixed - Делает фоновое изображение элемента неподвижным, а так же устанавливает фоновое изображение относительно окна браузера
		       local - Фон фиксируется с учётом поведения элемента. Если элемент имеет прокрутку, то фон будет прокручиваться вместе с содержимым, но фон выходящий за рамки элемента остаётся на месте.	

background: url('img/background/bg.jpg') 0 0/auto auto no-repeat; 
background-size: auto auto; -  Масштабирует фоновое изображение согласно заданным размерам. В цифрах, где первое значение (проценты, px) определяет ширину, второе - высоту. Либо специальным значением.
	         auto auto - размер картинки по умолчанию
		 100% auto - по ширине 
		 auto 100% - по высоте
		 100% 100% - растянуть
		 contain - Масштабирует изображение с сохранением пропорций таким образом, чтобы картинка целиком поместилась внутрь блока. То есть по меньшей стороне картинки
		 cover - Масштабирует изображение с сохранением пропорций так, чтобы его ширина или высота равнялась ширине или высоте блока. То есть по большей стороне картинки
		 200px 150px; - размеры


background-image: url('img/background/avatar_3.jpg'),url('img/background/bg.jpg'); - можно использовать сразу несколько background, при этом инициализируем одну фотографию,потом вторую, все свойства пишутся в той же очереди, что и картинки
background-repeat: no-repeat;
background-position: left,50%;
background-size: auto auto, cover;


		Псевдоклассы
.link:hover{} - объявление псевдокласса
	hover - срабатывает при наведении на элемент
	active - срабатывает в момент нажатия 
	visited - для посещенных ссылок
	focus - срабатывает при получении элементом фокуса (при выбое поля) 

		Псевдоэлементы
.text:  first-line{} - объявление псевдоэлемента
	first-line - первая строка
	first-letter - первая буква
	before - отображение желаемого контента (>) до содержимого элемента, к которому он добавляется (ОБЯЗАТЕЛЬНО свойство content:'>', если в списке content:'', то отобразится точка или номер пункта списка, все свойства относятся исключительно к content) 	
	after - отображение желаемого контента после содержимого элемента, к которому он добавляется (ОБЯЗАТЕЛЬНО свойство content:'')
.list li:hover:before{content:''} - изменение контента при наводке на текст
	
Специфические псевдоэлементы:
	input::-ms_clear{display: none} - убирает крестик из поля ввода в exploer
	button::-moz-focus-inner{padding: 0; border: 0} -убирает отступы и пробелы в кнопках в firefox